(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{283:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mac常见问题处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac常见问题处理"}},[t._v("#")]),t._v(" Mac常见问题处理")]),t._v(" "),a("h2",{attrs:{id:"_1-安装完软件显示「文件已损坏」或者安装完打开没有反应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装完软件显示「文件已损坏」或者安装完打开没有反应"}},[t._v("#")]),t._v(" 1. 安装完软件显示「文件已损坏」或者安装完打开没有反应")]),t._v(" "),a("p",[a("strong",[t._v("下面以PicGo解决方案为例，文档来自：https://github.com/Molunerfinn/PicGo/edit/dev/FAQ.md")])]),t._v(" "),a("p",[t._v("因为 PicGo 没有签名，所以会被 macOS 的安全检查所拦下。")]),t._v(" "),a("ol",[a("li",[t._v("安装后打开遇到「文件已损坏」的情况，请按如下方式操作：")])]),t._v(" "),a("p",[t._v("信任开发者，会要求输入密码:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo spctl --master-disable\n")])])]),a("p",[t._v("然后放行 PicGo :")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("xattr -cr /Applications/PicGo.app\n")])])]),a("p",[t._v("然后就能正常打开。")]),t._v(" "),a("p",[t._v("如果提示以下内容")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("option "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" not recognized\n\nusage: xattr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-slz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       xattr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-slz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" attr_name "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       xattr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-sz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" attr_name attr_value "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       xattr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" attr_name "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       xattr "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nThe first form lists the names of all xattrs on the given file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\nThe second form "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" prints the value of the xattr attr_name.\nThe third form "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" sets the value of the xattr attr_name to attr_value.\nThe fourth form "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" deletes the xattr attr_name.\nThe fifth form "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" deletes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clears"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" all xattrs.\n\noptions:\n  -h: print this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n  -s: act on symbolic links themselves rather than their targets\n  -l: print long "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attr_name: attr_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -z: compress or decompress "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("if compressed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" attribute value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),t._v("\n")])])]),a("p",[t._v("执行命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("xattr -c /Applications/PicGo.app/*\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("如果安装打开后没有反应，请按下方顺序排查：\n"),a("ol",[a("li",[t._v("macOS安装好之后，PicGo 是不会弹出主窗口的，因为 PicGo 在 macOS 系统里设计是个顶部栏应用。注意看你顶部栏的图标，如果有 PicGo 的图标，说明安装成功了，点击图标即可打开顶部栏窗口。参考上述"),a("a",{attrs:{href:"#8-mac-%E4%B8%8A%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80-picgo-%E7%9A%84%E4%B8%BB%E7%AA%97%E5%8F%A3%E7%95%8C%E9%9D%A2"}},[t._v("第八点")]),t._v("。")]),t._v(" "),a("li",[t._v("如果你是 M1 的系统，此前装过 PicGo 的 x64 版本，但是后来更新了 arm64 的版本发现打开后没反应，请重启电脑即可。")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-m1-安装kafka并运行golang-非m1芯片不会出现该问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-m1-安装kafka并运行golang-非m1芯片不会出现该问题"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://juejin.cn/post/7151788311235788807",target:"_blank",rel:"noopener noreferrer"}},[t._v("2. M1 安装Kafka并运行Golang（非M1芯片不会出现该问题）"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-用brew安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-用brew安装"}},[t._v("#")]),t._v(" 1.用brew安装")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew install kafka # 时间比较久，要耐心\n")])])]),a("h3",{attrs:{id:"_2-安装后启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装后启动服务"}},[t._v("#")]),t._v(" 2.安装后启动服务")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Kafka依赖 Zookeeper，过程中会顺带安装 Zookeeper")])]),t._v(" "),a("li",[a("p",[t._v("启动 Kafka前，要先启动 Zookeeper")])]),t._v(" "),a("li",[a("p",[t._v("启动 Zookeeper")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew restart zookeeper\n")])])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("启动 Kafka")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew restart kafka\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-检查是否启动成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-检查是否启动成功"}},[t._v("#")]),t._v(" 3. 检查是否启动成功")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 创建 Topic\nkafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic mymtopic\n\n# 查看 Topic\nkafka-topics --bootstrap-server localhost:9092 --list\nmymtopic\n\n# 监听当前 Topic 消息\nkafka-console-consumer --bootstrap-server localhost:9092 --topic mymtopic\n\n# 查看 Topic 配置信息\nkafka-topics --bootstrap-server localhost:9092 --describe  --topic mymtopic\nTopic: mymtopic TopicId: ouzL8Jf9RuqcYMkYnRqENQ PartitionCount: 1 ReplicationFactor: 1  Configs: segment.bytes=1073741824\n  Topic: mymtopic Partition: 0  Leader: 0 Replicas: 0 Isr: 0\n")])])]),a("h3",{attrs:{id:"_4-运行golang程序-报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-运行golang程序-报错"}},[t._v("#")]),t._v(" 4.运行Golang程序，报错")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git:(master) ✗ go run main.go\n# command-line-arguments\n/opt/homebrew/Cellar/go/1.19.1/libexec/pkg/tool/darwin_arm64/link: running clang failed: exit status 1\nld: warning: ignoring file /Users/mym/go/pkg/mod/github.com/confluentinc/confluent-kafka-go@v1.6.1/kafka/librdkafka_vendor/librdkafka_darwin.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64\n")])])]),a("h3",{attrs:{id:"_5-谷歌搜索找解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-谷歌搜索找解决方案"}},[t._v("#")]),t._v(" 5. 谷歌搜索找解决方案")]),t._v(" "),a("p",[t._v("发现这个issues："),a("a",{attrs:{href:"https://github.com/confluentinc/confluent-kafka-go/issues/591",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/confluentinc/confluent-kafka-go/issues/591"),a("OutboundLink")],1),t._v("（虽然这个issues没有关闭，但里面有解决方法，总结如下）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("安装 librdkafka")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew install librdkafka\n")])])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("配置环境变量")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('export PKG_CONFIG_PATH="/opt/homebrew/Cellar/openssl@1.1/1.1.1q/lib/pkgconfig"\n')])])])])]),t._v(" "),a("h3",{attrs:{id:"_6-加上-tags-dynamic重新运行golang程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-加上-tags-dynamic重新运行golang程序"}},[t._v("#")]),t._v(" 6. 加上"),a("code",[t._v("-tags dynamic")]),t._v("重新运行Golang程序")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git:(master) ✗ go run -tags dynamic main.go\n")])])]),a("p",[t._v("正常了！亲测有效，不过原理不是完全清楚，有兄弟明白的话，评论让我学习一下吧")])])}),[],!1,null,null,null);a.default=n.exports}}]);